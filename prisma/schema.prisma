// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tasks {
  id        String    @id @default(cuid())
  title     String
  deadline  DateTime
  comment   String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  usersId String
  User    Users  @relation(fields: [usersId], references: [id], onDelete: Cascade)

  statusId String
  Status   Status @relation(fields: [statusId], references: [id], onDelete: Cascade)

  prioritiesId String
  Priorities   Priorities @relation(fields: [prioritiesId], references: [id], onDelete: Cascade)
}

model Users {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  tasks Tasks[]
}

model Priorities {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  tasks Tasks[]
}

model Status {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  tasks Tasks[]
}
